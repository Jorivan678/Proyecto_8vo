@using Microsoft.AspNetCore.Identity
@inject SignInManager<Usuario> SignInManager
@{
    var hasExternalLogins = (await SignInManager.GetExternalAuthenticationSchemesAsync()).Any();
}
<ul class="nav nav-pills flex-column">
    <li class="nav-item"><a class="nav-link @ManageNavPages.IndexNavClass(ViewContext)" id="profile" asp-page="./Index">Perfil</a></li>
    <li class="nav-item"><a class="nav-link @ManageNavPages.EmailNavClass(ViewContext)" id="email" asp-page="./Email">Correo</a></li>
    <li class="nav-item"><a class="nav-link @ManageNavPages.ChangePasswordNavClass(ViewContext)" id="change-password" asp-page="./ChangePassword">Contraseña</a></li>
    <li class="nav-item"><a class="nav-link @ManageNavPages.PersonalDataNavClass(ViewContext)" id="personal-data" asp-page="./PersonalData">Datos de la cuenta</a></li>
    @if (SignInManager.IsSignedIn(User))
    {
        @if (User.IsInRole("administrador") == true)
        {
            <li class="nav-item"><a class="nav-link @ManageNavPages.AllArticlesReviewsNavClass(ViewContext)" id="all-reviews" asp-page="./AllReviews">Todos los artículos de reviews</a></li>
            <li class="nav-item"><a class="nav-link @ManageNavPages.AllArticlesNoticiasNavClass(ViewContext)" id="all-noticias" asp-page="./AllNoticias">Todos los artículos de noticias</a></li>
        }   }
</ul>
